{
  "GET /api/topics": {
    "description": "serves an array of all topics",
    "exampleResponse": {
      "topics": [{ "slug": "String", "description": "String" }]
    }
  },
  "GET /api/articles": {
    "description": "serves an array of all topics",
    "acceptedQueries": ["topic", "sort_by", "order"],
    "exampleResponse": {
      "articles": [
        {
          "article_id": "Number",
          "title": "String",
          "body": "String",
          "topic": "String",
          "author": "String",
          "votes": "Number",
          "created_at": "String",
          "comment_count": "String"
        }
      ]
    }
  },
  "GET /api/articles/:article_id": {
    "description": "Serves an object of a given article by ID.",
    "exampleResponse": {
      "article": {
        "article_id": "Number",
        "title": "String",
        "body": "String",
        "topic": "String",
        "author": "String",
        "votes": "Number",
        "created_at": "String",
        "comment_count": "String"
      }
    }
  },
  "PATCH /api/articles/:article_id": {
    "description": "Updates a record and responds with an object of containing the updated record.",
    "exampleRequest": { "inc_votes": 1 },
    "exampleResponse": {
      "article": {
        "article_id": "Number",
        "title": "String",
        "body": "String",
        "topic": "String",
        "author": "String",
        "votes": "Number",
        "created_at": "String",
        "comment_count": "String"
      }
    }
  },
  "GET /api/articles/:article_id/comments": {
    "description": "Serves an object containing the comments of a given article by ID",
    "acceptedQueries": ["sort_by", "order"],
    "exampleResponse": {
      "comments": [
        {
          "comment_id": "Number",
          "body": "String",
          "article_id": "Number",
          "author": "String",
          "votes": "Number",
          "created_at": "String"
        }
      ]
    }
  },
  "POST /api/articles/:article_id/comments": {
    "description": "Creates a new record and responds with newly created record",
    "exampleRequest": {
      "body": "String",
      "username": "String"
    },
    "exampleResponse": {
      "comment": {
        "comment_id": "Number",
        "body": "String",
        "article_id": "Number",
        "author": "String",
        "votes": "Number",
        "created_at": "String"
      }
    }
  },
  "DELETE /api/comments/:comment_id": {
    "description": "Removes a record",
    "exampleResponse": {}
  },
  "/api/users": {
    "description": "serves an array of objects containing registered users.",
    "queries": [],
    "exampleResponse": {
      "user": {
        "username": "String",
        "name": "String",
        "avatar_url": "String"
      }
    }
  }
}
